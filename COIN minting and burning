// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "@openzeppelin/contracts/token/ERC20/ERC20.sol";

contract INT is ERC20 {

    uint USDT;
    address public weuFoundation;

    constructor() ERC20("INT Token", "INPUT") {
        weuFoundation = msg.sender;
    }

    modifier onlyWEUFoundation() {
        require(msg.sender == weuFoundation, "Only WEU Foundation can perform this action");
        _;
    }

    function mint(address account, uint256 amount) external onlyWEUFoundation {
        _mint(account, amount);
    }

    function burn(uint256 amount) external onlyWEUFoundation {
        _burn(msg.sender, amount);
    }

    function convertToUSDT(uint256 INT_Token) external onlyWEUFoundation{
        
        USDT=INT_Token;
        require(INT_Token >0, "Amount must be greater than zero");
        
    
    }
}
